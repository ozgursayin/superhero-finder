{"version":3,"sources":["components/characters/CharacterItem.jsx","components/characters/CharacterCard.jsx","components/ui/Search/Suggestions.jsx","components/ui/Search/Search.jsx","img/superheroBG5.png","components/ui/Header.jsx","App.js","reportWebVitals.js","index.js"],"names":["CharacterItem","item","className","src","image","url","alt","name","Object","entries","powerstats","map","statname","statvalue","CharacterCard","isLoading","console","log","id","Suggestions","onClick","options","clicked","results","result","i","e","Search","getItemById","useState","text","setText","setClicked","onChange","length","isNaN","Math","ceil","random","action","type","placeholder","autoFocus","value","target","Header","logo","App","setItem","setIsLoading","charId","setCharId","useEffect","fetch","process","then","res","json","data","q","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.899b2491.chunk.js","sourcesContent":["import React from \"react\";\n\nconst CharacterItem = ({ item }) => {\n  return item ? (\n    <div className=\"card\">\n      <div className=\"card-image\"></div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image \">\n              <img src={item.image.url} alt=\"Placeholder \" />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-3\">{item.name}</p>\n            {Object.entries(item.powerstats).map(([statname, statvalue]) => (\n              <h1 className=\"title is-6\" key={statname}>\n                {statname} : {statvalue}\n              </h1>\n            ))}\n          </div>\n        </div>\n      </div>\n    </div>\n  ) : (\n    <div className=\"card\"></div>\n  );\n};\n\nexport default CharacterItem;\n","import React from \"react\";\nimport CharacterItem from \"./CharacterItem\";\n\nconst CharacterCard = ({ item, isLoading }) => {\n  console.log(item.name);\n  return isLoading ? (\n    <h1>Loading...</h1>\n  ) : item.id ? (\n    <section>\n      <CharacterItem key={item.id} item={item} />\n    </section>\n  ) : (\n    <CharacterItem key={item.id} item={null} />\n  );\n};\n\nexport default CharacterCard;\n","import React from \"react\";\n\nconst Suggestions = ({ item, onClick, clicked }) => {\n  let options = null;\n\n  if (!clicked) {\n    options = item.results ? (\n      item.results.map(\n        (result, i) =>\n          i < 500 && (\n            <li key={result.id}>\n              <section\n                onClick={(e) => {\n                  onClick(result.name);\n                }}\n              >\n                {result.name}\n              </section>\n            </li>\n          )\n      )\n    ) : (\n      <div></div>\n    );\n  }\n\n  return <ul className=\"suggestion\">{options}</ul>;\n};\n\nexport default Suggestions;\n","import React, { useState } from \"react\";\nimport Suggestions from \"./Suggestions\";\n\nconst Search = ({ getItemById, item }) => {\n  const [text, setText] = useState(\"\");\n  const [clicked, setClicked] = useState(true);\n\n  const onChange = (text, clicked) => {\n    setClicked(clicked);\n    setText(text);\n\n    if (text.length !== 0 && isNaN(text)) {\n      getItemById(\"search/\" + text);\n    } else if (text.length === 0 && isNaN(text)) {\n      getItemById(Math.ceil(Math.random() * 700));\n    }\n\n    if (text.length !== 0 && !isNaN(text)) {\n      getItemById(text);\n    } else if (text.length === 0 && !isNaN(text)) {\n      getItemById(Math.ceil(Math.random() * 700));\n    }\n\n    if (clicked) {\n      setText(\"\");\n    }\n  };\n\n  return (\n    <section className=\"search\">\n      <form action=\"\">\n        <input\n          className=\"input is-large\"\n          type=\"text\"\n          placeholder=\"Search characters\"\n          autoFocus\n          value={text}\n          onChange={(e) => onChange(e.target.value, false)}\n        />\n        <Suggestions\n          item={item}\n          onClick={(e) => onChange(e, true)}\n          clicked={clicked}\n        />\n      </form>\n    </section>\n  );\n};\n\nexport default Search;\n","export default __webpack_public_path__ + \"static/media/superheroBG5.06468b7d.png\";","import React from \"react\";\nimport logo from \"../../img/superheroBG5.png\";\n\nconst Header = () => {\n  return (\n    <div className=\"columns is-flex is-centered\">\n      <figure className=\"image is-128x128\">\n        <img src={logo} alt=\"logo\" />\n      </figure>\n    </div>\n  );\n};\n\nexport default Header;\n","import React, { useState, useEffect } from \"react\";\nimport CharacterCard from \"./components/characters/CharacterCard\";\nimport Search from \"./components/ui/Search/Search\";\nimport \"./App.css\";\nimport Header from \"./components/ui/Header\";\n\n//console.log(process.env.REACT_APP_SUPERHERO_API_KEY);\nconst BASE_URL = \"https://superheroapi.com/api.php/\";\nconst App = () => {\n  const [item, setItem] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [charId, setCharId] = useState(Math.ceil(Math.random() * 700));\n\n  useEffect(() => {\n    fetch(`${BASE_URL}${process.env.REACT_APP_SUPERHERO_API_KEY}/${charId}`)\n      .then((res) => res.json())\n      .then((data) => setItem(data));\n    setIsLoading(false);\n  }, [charId]);\n\n  if (!item.results) {\n    return (\n      <div className=\"container\">\n        <Header />\n        <Search getItemById={(q) => setCharId(q)} item={item} />\n        <br />\n\n        <CharacterCard isLoading={isLoading} item={item} />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"container\">\n        <Header />\n        <Search getItemById={(q) => setCharId(q)} item={item} />\n        <br />\n\n        <CharacterCard isLoading={isLoading} item={item.results[0]} />\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"bulma/css/bulma.css\";\n\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}